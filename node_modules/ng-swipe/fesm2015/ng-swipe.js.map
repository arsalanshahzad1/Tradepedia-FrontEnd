{"version":3,"file":"ng-swipe.js","sources":["ng://ng-swipe/lib/swipe.directive.ts","ng://ng-swipe/lib/swipe.module.ts"],"sourcesContent":["/**\r\n * Directive should be added to HTML element that swipe action is listened on.\r\n * Callback function should be attached to host event 'swipeMove' or'swipeEnd' event depending on required functionality.\r\n * Event object contains two properties:\r\n * [direction]: 'y' | 'x'  - defines swipe direction is vertical or horizontal\r\n * [distance]: number - defines swipe length in pixels\r\n */\r\nimport { Directive, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { elementAt, filter, map, switchMap, take, takeUntil, takeWhile, tap } from 'rxjs/operators';\r\nimport { SwipeCoordinates, SwipeDirection, SwipeEvent } from './interfaces';\r\n\r\n@Directive({\r\n  selector: '[ngSwipe]'\r\n})\r\n\r\nexport class SwipeDirective implements OnInit, OnDestroy {\r\n\r\n  @Output() swipeMove: EventEmitter<SwipeEvent> = new EventEmitter<SwipeEvent>();\r\n  @Output() swipeEnd: EventEmitter<SwipeEvent> = new EventEmitter<SwipeEvent>();\r\n\r\n  /**\r\n   * Property used to unsubscribe from all subscriptions on destroy event\r\n   */\r\n  private alive = true;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const domElement = this.elementRef.nativeElement;\r\n    \r\n    const touchStarts: Observable<SwipeCoordinates> = fromEvent(domElement, 'touchstart').pipe(map(this.touchEventToCoordinate));\r\n    const touchMoves: Observable<SwipeCoordinates> = fromEvent(domElement, 'touchmove').pipe(map(this.touchEventToCoordinate));\r\n    const touchEnds: Observable<SwipeCoordinates> = fromEvent(domElement, 'touchend').pipe(map(this.touchEventToCoordinate));\r\n    \r\n    /**\r\n     * Move starts with direction: Pair the move start events with the 3rd subsequent move event,\r\n     * but only if no touch end event happens in between\r\n     */\r\n    const moveStartsWithDirection = touchStarts.pipe(\r\n      switchMap((dragStartEvent: SwipeCoordinates) => touchMoves.pipe(\r\n        elementAt(3),\r\n        map((dragEvent: SwipeCoordinates) => {\r\n          const intialDeltaX = dragEvent.x - dragStartEvent.x;\r\n          const initialDeltaY = dragEvent.y - dragStartEvent.y;\r\n          return {x: dragStartEvent.x, y: dragStartEvent.y, intialDeltaX, initialDeltaY};\r\n        })\r\n    )));\r\n\r\n    /**\r\n     * Vertical move starts: Keep only those move start events\r\n     * where the 3rd subsequent move event is rather vertical than horizontal\r\n     */\r\n    const verticalMoveStarts = moveStartsWithDirection.pipe(\r\n      filter(dragStartEvent => Math.abs(dragStartEvent.intialDeltaX) < Math.abs(dragStartEvent.initialDeltaY)\r\n    ));\r\n\r\n    /**\r\n     * Horizontal move starts: Keep only those move start events\r\n     * where the 3rd subsequent move event is rather horizontal than vertical\r\n     */\r\n    const horizontalMoveStarts = moveStartsWithDirection.pipe(\r\n      filter(dragStartEvent => Math.abs(dragStartEvent.intialDeltaX) >= Math.abs(dragStartEvent.initialDeltaY))\r\n    );\r\n\r\n    /**\r\n     * Take the moves until touch ends\r\n     * On move end emit swipe end event to parent element\r\n     */\r\n    const movesUntilEnds = (dragStartEvent: any, direction: SwipeDirection) => touchMoves.pipe(\r\n      map(dragEvent => this.getSwipeDistance(dragStartEvent, dragEvent)),\r\n      takeUntil(touchEnds.pipe(\r\n        take(1),\r\n        map(dragEndEvent => this.getSwipeDistance(dragStartEvent, dragEndEvent)),\r\n        tap((coordinates: SwipeCoordinates) => this.emitSwipeEndEvent(direction, coordinates))\r\n    )));\r\n\r\n    const verticalMoves = verticalMoveStarts.pipe(\r\n      switchMap(dragStartEvent => movesUntilEnds(dragStartEvent, 'y'))\r\n    );\r\n    const horizontalMoves = horizontalMoveStarts.pipe(\r\n      switchMap(dragStartEvent => movesUntilEnds(dragStartEvent, 'x'))\r\n    );\r\n    \r\n    /**\r\n     * Run swipe subscriptions outside zone for better performance\r\n     * On move emit swipe move event to parent element\r\n     */\r\n    this.zone.runOutsideAngular(() => {\r\n      verticalMoves.pipe(\r\n        takeWhile(() => this.alive)\r\n      ).subscribe((coordinates: SwipeCoordinates) => this.emitSwipeMoveEvent('y', coordinates));\r\n  \r\n      horizontalMoves.pipe(\r\n        takeWhile(() => this.alive)\r\n      ).subscribe((coordinates: SwipeCoordinates) => this.emitSwipeMoveEvent('x', coordinates));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set alive property to false to unsubscribe from all subscriptions\r\n   */\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n\r\n  /**\r\n   * Format touch event to coordinates object that is easier to read\r\n   */\r\n  public touchEventToCoordinate(touchEvent: TouchEvent): SwipeCoordinates  {\r\n    return {\r\n      x: touchEvent.changedTouches[0].clientX,\r\n      y: touchEvent.changedTouches[0].clientY\r\n    };\r\n  }\r\n  \r\n  private getSwipeDistance(dragStartEvent, dragEvent): SwipeCoordinates {\r\n    return {\r\n      x: dragEvent.x - dragStartEvent.x,\r\n      y: dragEvent.y - dragStartEvent.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Emits swipe move event with calculated direction and distance\r\n   */\r\n  private emitSwipeMoveEvent(direction: SwipeDirection, coordinates: SwipeCoordinates) {\r\n    this.swipeMove.emit({direction, distance: coordinates[direction]});\r\n  }\r\n\r\n  /**\r\n   * Emits swipe move event with calculated direction and distance\r\n   */\r\n  private emitSwipeEndEvent(direction: SwipeDirection, coordinates: SwipeCoordinates) {\r\n    this.swipeEnd.emit({direction, distance: coordinates[direction]});\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { SwipeDirective } from './swipe.directive';\n\n@NgModule({\n  declarations: [SwipeDirective],\n  exports: [SwipeDirective]\n})\nexport class SwipeModule { }\n"],"names":[],"mappings":"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"}