/**
 * Directive should be added to HTML element that swipe action is listened on.
 * Callback function should be attached to host event 'swipeMove' or'swipeEnd' event depending on required functionality.
 * Event object contains two properties:
 * [direction]: 'y' | 'x'  - defines swipe direction is vertical or horizontal
 * [distance]: number - defines swipe length in pixels
 */
import { ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import { SwipeCoordinates, SwipeEvent } from './interfaces';
export declare class SwipeDirective implements OnInit, OnDestroy {
    private elementRef;
    private zone;
    swipeMove: EventEmitter<SwipeEvent>;
    swipeEnd: EventEmitter<SwipeEvent>;
    /**
     * Property used to unsubscribe from all subscriptions on destroy event
     */
    private alive;
    constructor(elementRef: ElementRef, zone: NgZone);
    ngOnInit(): void;
    /**
     * Set alive property to false to unsubscribe from all subscriptions
     */
    ngOnDestroy(): void;
    /**
     * Format touch event to coordinates object that is easier to read
     */
    touchEventToCoordinate(touchEvent: TouchEvent): SwipeCoordinates;
    private getSwipeDistance;
    /**
     * Emits swipe move event with calculated direction and distance
     */
    private emitSwipeMoveEvent;
    /**
     * Emits swipe move event with calculated direction and distance
     */
    private emitSwipeEndEvent;
}
