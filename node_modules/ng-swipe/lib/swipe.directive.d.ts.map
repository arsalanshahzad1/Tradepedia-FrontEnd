{"version":3,"file":"swipe.directive.d.ts","sources":["swipe.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Directive should be added to HTML element that swipe action is listened on.\r\n * Callback function should be attached to host event 'swipeMove' or'swipeEnd' event depending on required functionality.\r\n * Event object contains two properties:\r\n * [direction]: 'y' | 'x'  - defines swipe direction is vertical or horizontal\r\n * [distance]: number - defines swipe length in pixels\r\n */\r\nimport { ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { SwipeCoordinates, SwipeEvent } from './interfaces';\r\nexport declare class SwipeDirective implements OnInit, OnDestroy {\r\n    private elementRef;\r\n    private zone;\r\n    swipeMove: EventEmitter<SwipeEvent>;\r\n    swipeEnd: EventEmitter<SwipeEvent>;\r\n    /**\r\n     * Property used to unsubscribe from all subscriptions on destroy event\r\n     */\r\n    private alive;\r\n    constructor(elementRef: ElementRef, zone: NgZone);\r\n    ngOnInit(): void;\r\n    /**\r\n     * Set alive property to false to unsubscribe from all subscriptions\r\n     */\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Format touch event to coordinates object that is easier to read\r\n     */\r\n    touchEventToCoordinate(touchEvent: TouchEvent): SwipeCoordinates;\r\n    private getSwipeDistance;\r\n    /**\r\n     * Emits swipe move event with calculated direction and distance\r\n     */\r\n    private emitSwipeMoveEvent;\r\n    /**\r\n     * Emits swipe move event with calculated direction and distance\r\n     */\r\n    private emitSwipeEndEvent;\r\n}\r\n"]}