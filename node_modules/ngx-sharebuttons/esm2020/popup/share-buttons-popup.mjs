import { Component, ChangeDetectionStrategy, Inject, Optional } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { SHARE_POPUP_OPTIONS } from './share-buttons-popup.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "ngx-sharebuttons/buttons";
import * as i3 from "@fortawesome/angular-fontawesome";
import * as i4 from "@angular/common";
import * as i5 from "ngx-sharebuttons";
export class ShareButtonsPopup {
    constructor(_document, options, _focusTrapFactory, _elementRef) {
        this._document = _document;
        this.options = options;
        this._focusTrapFactory = _focusTrapFactory;
        this._elementRef = _elementRef;
        this._savePreviouslyFocusedElement();
    }
    get isBtnCopy() {
        return this.options.exclude && this.options.exclude.filter((btn) => btn === 'copy').length > 0;
    }
    ngAfterViewInit() {
        this._trapFocus();
    }
    /** Callback, invoked whenever an animation on the host completes. */
    ngOnDestroy() {
        this.overlayRef.dispose();
        this._restoreFocus();
    }
    /** Moves the focus inside the focus trap. */
    _trapFocus() {
        if (!this._focusTrap) {
            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
        }
        // If were to attempt to focus immediately, then the content of the lightbox would not yet be
        // ready in instances where change detection has to run first. To deal with this, we simply
        // wait for the microtask queue to be empty.
        this._focusTrap.focusInitialElementWhenReady();
    }
    /** Saves a reference to the element that was focused before the lightbox was opened. */
    _savePreviouslyFocusedElement() {
        if (this._document) {
            this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;
            // Note that there is no focus method when rendering on the server.
            if (this._elementRef.nativeElement.focus) {
                // Move focus onto the lightbox immediately in order to prevent the user from accidentally
                // opening multiple dialogs at the same time. Needs to be async, because the element
                // may not be focusable immediately.
                Promise.resolve().then(() => this._elementRef.nativeElement.focus());
            }
        }
    }
    /** Restores focus to the element that was focused before the lightbox opened. */
    _restoreFocus() {
        const toFocus = this._elementFocusedBeforeDialogWasOpened;
        // We need the extra check, because IE can set the `activeElement` to null in some cases.
        if (toFocus && typeof toFocus.focus === 'function') {
            toFocus.focus();
        }
        if (this._focusTrap) {
            this._focusTrap.destroy();
        }
    }
}
ShareButtonsPopup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ShareButtonsPopup, deps: [{ token: DOCUMENT, optional: true }, { token: SHARE_POPUP_OPTIONS, optional: true }, { token: i1.FocusTrapFactory }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
ShareButtonsPopup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.2", type: ShareButtonsPopup, selector: "share-buttons-popup", host: { attributes: { "tabindex": "-1", "aria-modal": "true" }, properties: { "attr.role": "role", "attr.aria-labelledby": "ariaLabel ? null : ariaLabelledBy", "attr.aria-label": "ariaLabel", "attr.aria-describedby": "ariaDescribedBy || null" } }, ngImport: i0, template: "<div class=\"sb-overlay\">\n  <h3>Share</h3>\n  <div *ngIf=\"isBtnCopy\" #shareButton=\"shareButton\" shareButton=\"copy\" class=\"sb-copy-url\">\n    <span>{{ shareButton?.url }}</span>\n  </div>\n\n  <share-buttons [include]=\"options?.include\"\n                 [exclude]=\"options?.exclude\"\n                 [theme]=\"options?.theme\"\n                 [url]=\"options?.url\"\n                 [title]=\"options?.title\"\n                 [description]=\"options?.description\"\n                 [image]=\"options?.image\"\n                 [tags]=\"options?.tags\"\n                 [autoSetMeta]=\"options?.autoSetMeta\"\n                 [show]=\"options?.show\"\n                 [showIcon]=\"options?.showIcon\"\n                 [showText]=\"options?.showText\"\n                 (opened)=\"options?.opened?.emit($event)\"\n                 (closed)=\"options?.closed?.emit($event)\"\n                 [disabled]=\"options?.disabled\">\n  </share-buttons>\n\n  <div class=\"sb-close-overlay\" (click)=\"options.closeClick.emit()\">\n    <fa-icon [icon]=\"options.closeIcon\"></fa-icon>\n  </div>\n\n</div>\n", styles: [":host,.sb-close-overlay{display:flex;justify-content:center;align-items:center}h3{margin:5px;top:5px;position:absolute}.sb-overlay{max-width:100%;max-height:100%;width:300px;display:flex;flex-direction:column;position:relative;padding:1em}::ng-deep share-buttons-popup{position:relative;display:block;background:white;max-width:94vw;max-height:90vh;border-radius:16px;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep share-buttons-popup:focus{outline:none}::ng-deep share-buttons-popup share-buttons{margin-top:30px;display:block;width:100%;height:100%}::ng-deep .sb-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep share-buttons-popup{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .sb-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .sb-overlay{width:100%}::ng-deep .sb-overlay ::ng-deep share-buttons-popup{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .sb-overlay .sb-button{flex:1}::ng-deep .sb-overlay .sb-wrapper{width:100%}::ng-deep .sb-overlay .sb-wrapper .sb-icon{flex:1}::ng-deep .sb-overlay .sb-wrapper .sb-text{flex:2}::ng-deep .sb-close-overlay{color:#2e4057;position:absolute;margin:5px;right:0;top:0;z-index:60;cursor:pointer;width:40px;height:40px;font-size:20px}@media only screen and (max-width: 480px){::ng-deep .sb-close-overlay{margin:2px}}\n"], components: [{ type: i2.ShareButtons, selector: "share-buttons", inputs: ["theme", "include", "exclude", "show", "url", "title", "description", "image", "tags", "autoSetMeta", "showIcon", "showText", "disabled"], outputs: ["opened", "closed"] }, { type: i3.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.ShareDirective, selector: "[shareButton]", inputs: ["shareButton", "autoSetMeta", "url", "title", "description", "image", "tags"], outputs: ["opened", "closed"], exportAs: ["shareButton"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ShareButtonsPopup, decorators: [{
            type: Component,
            args: [{ selector: 'share-buttons-popup', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        'tabindex': '-1',
                        'aria-modal': 'true',
                        '[attr.role]': 'role',
                        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',
                        '[attr.aria-label]': 'ariaLabel',
                        '[attr.aria-describedby]': 'ariaDescribedBy || null'
                    }, template: "<div class=\"sb-overlay\">\n  <h3>Share</h3>\n  <div *ngIf=\"isBtnCopy\" #shareButton=\"shareButton\" shareButton=\"copy\" class=\"sb-copy-url\">\n    <span>{{ shareButton?.url }}</span>\n  </div>\n\n  <share-buttons [include]=\"options?.include\"\n                 [exclude]=\"options?.exclude\"\n                 [theme]=\"options?.theme\"\n                 [url]=\"options?.url\"\n                 [title]=\"options?.title\"\n                 [description]=\"options?.description\"\n                 [image]=\"options?.image\"\n                 [tags]=\"options?.tags\"\n                 [autoSetMeta]=\"options?.autoSetMeta\"\n                 [show]=\"options?.show\"\n                 [showIcon]=\"options?.showIcon\"\n                 [showText]=\"options?.showText\"\n                 (opened)=\"options?.opened?.emit($event)\"\n                 (closed)=\"options?.closed?.emit($event)\"\n                 [disabled]=\"options?.disabled\">\n  </share-buttons>\n\n  <div class=\"sb-close-overlay\" (click)=\"options.closeClick.emit()\">\n    <fa-icon [icon]=\"options.closeIcon\"></fa-icon>\n  </div>\n\n</div>\n", styles: [":host,.sb-close-overlay{display:flex;justify-content:center;align-items:center}h3{margin:5px;top:5px;position:absolute}.sb-overlay{max-width:100%;max-height:100%;width:300px;display:flex;flex-direction:column;position:relative;padding:1em}::ng-deep share-buttons-popup{position:relative;display:block;background:white;max-width:94vw;max-height:90vh;border-radius:16px;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep share-buttons-popup:focus{outline:none}::ng-deep share-buttons-popup share-buttons{margin-top:30px;display:block;width:100%;height:100%}::ng-deep .sb-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep share-buttons-popup{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .sb-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .sb-overlay{width:100%}::ng-deep .sb-overlay ::ng-deep share-buttons-popup{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .sb-overlay .sb-button{flex:1}::ng-deep .sb-overlay .sb-wrapper{width:100%}::ng-deep .sb-overlay .sb-wrapper .sb-icon{flex:1}::ng-deep .sb-overlay .sb-wrapper .sb-text{flex:2}::ng-deep .sb-close-overlay{color:#2e4057;position:absolute;margin:5px;right:0;top:0;z-index:60;cursor:pointer;width:40px;height:40px;font-size:20px}@media only screen and (max-width: 480px){::ng-deep .sb-close-overlay{margin:2px}}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [SHARE_POPUP_OPTIONS]
                }] }, { type: i1.FocusTrapFactory }, { type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,