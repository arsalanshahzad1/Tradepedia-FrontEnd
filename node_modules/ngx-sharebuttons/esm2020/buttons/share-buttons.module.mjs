import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';
import { ShareButtonModule } from 'ngx-sharebuttons/button';
import { ShareButtons } from './share-buttons';
import { ExpandButton } from './expand-button';
import * as i0 from "@angular/core";
export class ShareButtonsModule {
    static withConfig(config) {
        return {
            ngModule: ShareButtonsModule,
            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]
        };
    }
}
ShareButtonsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ShareButtonsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ShareButtonsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ShareButtonsModule, declarations: [ShareButtons,
        ExpandButton], imports: [ShareButtonModule,
        CommonModule], exports: [ShareButtonModule,
        ShareButtons] });
ShareButtonsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ShareButtonsModule, imports: [[
            ShareButtonModule,
            CommonModule
        ], ShareButtonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ShareButtonsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ShareButtons,
                        ExpandButton
                    ],
                    imports: [
                        ShareButtonModule,
                        CommonModule
                    ],
                    exports: [
                        ShareButtonModule,
                        ShareButtons
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtYnV0dG9ucy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2hhcmVidXR0b25zL2J1dHRvbnMvc3JjL3NoYXJlLWJ1dHRvbnMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQXNCLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFnQi9DLE1BQU0sT0FBTyxrQkFBa0I7SUFDN0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUEyQjtRQUMzQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QixTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDLENBQUM7U0FDL0QsQ0FBQztJQUNKLENBQUM7OytHQU5VLGtCQUFrQjtnSEFBbEIsa0JBQWtCLGlCQVozQixZQUFZO1FBQ1osWUFBWSxhQUdaLGlCQUFpQjtRQUNqQixZQUFZLGFBR1osaUJBQWlCO1FBQ2pCLFlBQVk7Z0hBR0gsa0JBQWtCLFlBVHBCO1lBQ1AsaUJBQWlCO1lBQ2pCLFlBQVk7U0FDYixFQUVDLGlCQUFpQjsyRkFJUixrQkFBa0I7a0JBZDlCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLFlBQVk7d0JBQ1osWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsaUJBQWlCO3dCQUNqQixZQUFZO3FCQUNiO29CQUNELE9BQU8sRUFBRTt3QkFDUCxpQkFBaUI7d0JBQ2pCLFlBQVk7cUJBQ2I7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgU2hhcmVCdXR0b25zQ29uZmlnLCBTSEFSRV9CVVRUT05TX0NPTkZJRyB9IGZyb20gJ25neC1zaGFyZWJ1dHRvbnMnO1xuaW1wb3J0IHsgU2hhcmVCdXR0b25Nb2R1bGUgfSBmcm9tICduZ3gtc2hhcmVidXR0b25zL2J1dHRvbic7XG5cbmltcG9ydCB7IFNoYXJlQnV0dG9ucyB9IGZyb20gJy4vc2hhcmUtYnV0dG9ucyc7XG5pbXBvcnQgeyBFeHBhbmRCdXR0b24gfSBmcm9tICcuL2V4cGFuZC1idXR0b24nO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTaGFyZUJ1dHRvbnMsXG4gICAgRXhwYW5kQnV0dG9uXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBTaGFyZUJ1dHRvbk1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFNoYXJlQnV0dG9uTW9kdWxlLFxuICAgIFNoYXJlQnV0dG9uc1xuICBdXG59KVxuZXhwb3J0IGNsYXNzIFNoYXJlQnV0dG9uc01vZHVsZSB7XG4gIHN0YXRpYyB3aXRoQ29uZmlnKGNvbmZpZz86IFNoYXJlQnV0dG9uc0NvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U2hhcmVCdXR0b25zTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBTaGFyZUJ1dHRvbnNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFt7cHJvdmlkZTogU0hBUkVfQlVUVE9OU19DT05GSUcsIHVzZVZhbHVlOiBjb25maWd9XVxuICAgIH07XG4gIH1cbn1cbiJdfQ==