{"version":3,"file":"ngx-sharebuttons-button.mjs","sources":["../../../projects/ngx-sharebuttons/button/src/share-button.ts","../../../projects/ngx-sharebuttons/button/src/share-button.html","../../../projects/ngx-sharebuttons/button/src/share-button.module.ts","../../../projects/ngx-sharebuttons/button/src/ngx-sharebuttons-button.ts"],"sourcesContent":["import { Component, Input, Output, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { ShareService } from 'ngx-sharebuttons';\n\n@Component({\n  selector: 'share-button',\n  templateUrl: './share-button.html',\n  styleUrls: ['./share-button.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButton {\n\n  /** Share button type */\n  @Input() button: string;\n\n  /** The page URL */\n  @Input() url: string;\n\n  /** The title parameter */\n  @Input() title: string;\n\n  /** The description parameter */\n  @Input() description: string;\n\n  /** The image parameter for sharing on Pinterest */\n  @Input() image: string;\n\n  /** The tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string;\n\n  /** Sets meta tags from document head, useful when SEO is available */\n  @Input() autoSetMeta: boolean;\n\n  /** Show button icon */\n  @Input() showIcon = true;\n\n  /** Show button text */\n  @Input() showText = false;\n\n  /** Button custom text */\n  @Input() text: string;\n\n  /** Button custom icon */\n  @Input() icon: string;\n\n  /** Button theme */\n  @Input() theme: string = this._share.config.theme;\n\n  /** A flag that indicates if the button's click is disabled */\n  @Input() disabled: boolean;\n\n  /** Stream that emits when share dialog is opened */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Stream that emits when share dialog is closed */\n  @Output() closed = new EventEmitter<string>();\n\n  /** Set theme as button class */\n  @HostBinding('class') get buttonClass() {\n    return `sb-button sb-${ this.theme }`;\n  }\n\n  constructor(private _share: ShareService) {\n  }\n}\n","<button #btn=\"shareButton\"\n        type=\"button\"\n        class=\"sb-wrapper\"\n        [class.sb-show-icon]=\"showIcon\"\n        [class.sb-show-text]=\"showText\"\n        [shareButton]=\"button\"\n        [url]=\"url\"\n        [image]=\"image\"\n        [title]=\"title\"\n        [description]=\"description\"\n        [tags]=\"tags\"\n        [autoSetMeta]=\"autoSetMeta\"\n        [disabled]=\"disabled\"\n        (opened)=\"opened.emit($event)\"\n        (closed)=\"closed.emit($event)\">\n\n  <div *ngIf=\"btn\" class=\"sb-content\">\n\n    <div *ngIf=\"showIcon && btn.icon\" class=\"sb-icon\">\n      <fa-icon [icon]=\"icon || btn.icon\" [fixedWidth]=\"true\"></fa-icon>\n    </div>\n\n    <div *ngIf=\"showText\" class=\"sb-text\">\n      {{ text || btn.text }}\n    </div>\n\n  </div>\n</button>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ShareModule, ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';\n\nimport { ShareButton } from './share-button';\n\n@NgModule({\n  declarations: [\n    ShareButton\n  ],\n  imports: [\n    ShareModule,\n    FontAwesomeModule,\n    CommonModule\n  ],\n  exports: [\n    ShareModule,\n    FontAwesomeModule,\n    ShareButton\n  ]\n})\nexport class ShareButtonModule {\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders<ShareButtonModule> {\n    return {\n      ngModule: ShareButtonModule,\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;MAUa,WAAW;IAoDtB,YAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;;QA5B/B,aAAQ,GAAG,IAAI,CAAC;;QAGhB,aAAQ,GAAG,KAAK,CAAC;;QASjB,UAAK,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;;QAMxC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;;QAGpC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;KAQ7C;;IALD,IAA0B,WAAW;QACnC,OAAO,gBAAiB,IAAI,CAAC,KAAM,EAAE,CAAC;KACvC;;wGAlDU,WAAW;4FAAX,WAAW,0ZCVxB,izBA4BA;2FDlBa,WAAW;kBANvB,SAAS;+BACE,cAAc,mBAGP,uBAAuB,CAAC,MAAM;mGAKtC,MAAM;sBAAd,KAAK;gBAGG,GAAG;sBAAX,KAAK;gBAGG,KAAK;sBAAb,KAAK;gBAGG,WAAW;sBAAnB,KAAK;gBAGG,KAAK;sBAAb,KAAK;gBAGG,IAAI;sBAAZ,KAAK;gBAGG,WAAW;sBAAnB,KAAK;gBAGG,QAAQ;sBAAhB,KAAK;gBAGG,QAAQ;sBAAhB,KAAK;gBAGG,IAAI;sBAAZ,KAAK;gBAGG,IAAI;sBAAZ,KAAK;gBAGG,KAAK;sBAAb,KAAK;gBAGG,QAAQ;sBAAhB,KAAK;gBAGI,MAAM;sBAAf,MAAM;gBAGG,MAAM;sBAAf,MAAM;gBAGmB,WAAW;sBAApC,WAAW;uBAAC,OAAO;;;MEnCT,iBAAiB;IAC5B,OAAO,UAAU,CAAC,MAA2B;QAC3C,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;SAC/D,CAAC;KACH;;8GANU,iBAAiB;+GAAjB,iBAAiB,iBAb1B,WAAW,aAGX,WAAW;QACX,iBAAiB;QACjB,YAAY,aAGZ,WAAW;QACX,iBAAiB;QACjB,WAAW;+GAGF,iBAAiB,YAXnB;YACP,WAAW;YACX,iBAAiB;YACjB,YAAY;SACb,EAEC,WAAW;QACX,iBAAiB;2FAIR,iBAAiB;kBAf7B,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,WAAW;qBACZ;oBACD,OAAO,EAAE;wBACP,WAAW;wBACX,iBAAiB;wBACjB,YAAY;qBACb;oBACD,OAAO,EAAE;wBACP,WAAW;wBACX,iBAAiB;wBACjB,WAAW;qBACZ;iBACF;;;ACtBD;;;;;;"}